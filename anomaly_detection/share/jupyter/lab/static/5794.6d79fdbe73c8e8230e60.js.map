{"version":3,"file":"5794.6d79fdbe73c8e8230e60.js?v=6d79fdbe73c8e8230e60","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/mermaid/dist/stateDiagram-b8fc1844.js"],"sourcesContent":["import { d as db, p as parser, s as styles } from \"./styles-401768ef.js\";\nimport { line, curveBasis, select } from \"d3\";\nimport { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { c as getConfig, u as utils, e as common, l as log, i as configureSvgSize } from \"./mermaid-04fb0060.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nconst idCache = {};\nconst set = (key, val) => {\n  idCache[key] = val;\n};\nconst get = (k) => idCache[k];\nconst keys = () => Object.keys(idCache);\nconst size = () => keys().length;\nconst idCache$1 = {\n  get,\n  set,\n  keys,\n  size\n};\nconst drawStartState = (g) => g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit);\nconst drawDivider = (g) => g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", getConfig().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", getConfig().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0);\nconst drawSimpleState = (g, stateDef) => {\n  const state = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 2 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const classBox = state.node().getBBox();\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", classBox.width + 2 * getConfig().state.padding).attr(\"height\", classBox.height + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return state;\n};\nconst drawDescrState = (g, stateDef) => {\n  const addTspan = function(textEl, txt, isFirst2) {\n    const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * getConfig().state.padding).text(txt);\n    if (!isFirst2) {\n      tSpan.attr(\"dy\", getConfig().state.textHeight);\n    }\n  };\n  const title = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 1.3 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n  const description = g.append(\"text\").attr(\"x\", getConfig().state.padding).attr(\n    \"y\",\n    titleHeight + getConfig().state.padding * 0.4 + getConfig().state.dividerMargin + getConfig().state.textHeight\n  ).attr(\"class\", \"state-description\");\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function(descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n  const descrLine = g.append(\"line\").attr(\"x1\", getConfig().state.padding).attr(\"y1\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"y2\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n  descrLine.attr(\"x2\", width + 3 * getConfig().state.padding);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", width + 2 * getConfig().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return g;\n};\nconst addTitleAndBox = (g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n  const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", getConfig().state.titleShift).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth);\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  const graphBox = g.node().getBBox();\n  if (stateDef.doc)\n    ;\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\n    startX = orgX - (titleWidth - orgWidth) / 2;\n  }\n  const lineY = 1 - getConfig().state.textHeight;\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\n    \"height\",\n    graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\n  ).attr(\"rx\", \"0\");\n  title.attr(\"x\", startX + pad);\n  if (titleWidth <= orgWidth) {\n    title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n  }\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", getConfig().state.textHeight * 3).attr(\"rx\", getConfig().state.radius);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * getConfig().state.textHeight).attr(\"rx\", getConfig().state.radius);\n  return g;\n};\nconst drawEndState = (g) => {\n  g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\n    \"cx\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  ).attr(\n    \"cy\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  );\n  return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + 2).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + 2);\n};\nconst drawForkJoinState = (g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding);\n};\nconst _drawLongText = (_text, x, y, g) => {\n  let textHeight = 0;\n  const textElem = g.append(\"text\");\n  textElem.style(\"text-anchor\", \"start\");\n  textElem.attr(\"class\", \"noteText\");\n  let text = _text.replace(/\\r\\n/g, \"<br/>\");\n  text = text.replace(/\\n/g, \"<br/>\");\n  const lines = text.split(common.lineBreakRegex);\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line2 of lines) {\n    const txt = line2.trim();\n    if (txt.length > 0) {\n      const span = textElem.append(\"tspan\");\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr(\"x\", x + getConfig().state.noteMargin);\n      span.attr(\"y\", y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return { textWidth: textElem.node().getBBox().width, textHeight };\n};\nconst drawNote = (text, g) => {\n  g.attr(\"class\", \"state-note\");\n  const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", getConfig().state.padding);\n  const rectElem = g.append(\"g\");\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\n  note.attr(\"height\", textHeight + 2 * getConfig().state.noteMargin);\n  note.attr(\"width\", textWidth + getConfig().state.noteMargin * 2);\n  return note;\n};\nconst drawState = function(elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id,\n    label: stateDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\n  if (stateDef.type === \"start\") {\n    drawStartState(g);\n  }\n  if (stateDef.type === \"end\") {\n    drawEndState(g);\n  }\n  if (stateDef.type === \"fork\" || stateDef.type === \"join\") {\n    drawForkJoinState(g, stateDef);\n  }\n  if (stateDef.type === \"note\") {\n    drawNote(stateDef.note.text, g);\n  }\n  if (stateDef.type === \"divider\") {\n    drawDivider(g);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) {\n    drawSimpleState(g, stateDef);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) {\n    drawDescrState(g, stateDef);\n  }\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n  idCache$1.set(id, stateInfo);\n  return stateInfo;\n};\nlet edgeCount = 0;\nconst drawEdge = function(elem, path, relation) {\n  const getRelationType = function(type) {\n    switch (type) {\n      case db.relationType.AGGREGATION:\n        return \"aggregation\";\n      case db.relationType.EXTENSION:\n        return \"extension\";\n      case db.relationType.COMPOSITION:\n        return \"composition\";\n      case db.relationType.DEPENDENCY:\n        return \"dependency\";\n    }\n  };\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"transition\");\n  let url = \"\";\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  svgPath.attr(\n    \"marker-end\",\n    \"url(\" + url + \"#\" + getRelationType(db.relationType.DEPENDENCY) + \"End)\"\n  );\n  if (relation.title !== void 0) {\n    const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\n    const { x, y } = utils.calcLabelPosition(path.points);\n    const rows = common.getRows(relation.title);\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\n      const boundstmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundstmp.width);\n      minX = Math.min(minX, boundstmp.x);\n      log.info(boundstmp.x, x, y + titleHeight);\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info(\"Title height\", titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n      titleRows.forEach((title, i) => title.attr(\"y\", y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n    const bounds = label.node().getBBox();\n    label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - getConfig().state.padding / 2).attr(\"y\", y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5).attr(\"width\", maxWidth + getConfig().state.padding).attr(\"height\", boxHeight + getConfig().state.padding);\n    log.info(bounds);\n  }\n  edgeCount++;\n};\nlet conf;\nconst transformationLog = {};\nconst setConf = function() {\n};\nconst insertMarkers = function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n};\nconst draw = function(text, id, _version, diagObj) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  log.debug(\"Rendering diagram \" + text);\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const rootDoc = diagObj.db.getRootDoc();\n  renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\n  const padding = conf.padding;\n  const bounds = diagram2.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram2, height, svgWidth, conf.useMaxWidth);\n  diagram2.attr(\n    \"viewBox\",\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + \" \" + height\n  );\n};\nconst getLabelWidth = (text) => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n};\nconst renderDoc = (doc, diagram2, parentId, altBkg, root, domDocument, diagObj) => {\n  const graph = new graphlib.Graph({\n    compound: true,\n    multigraph: true\n  });\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === \"relation\") {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n  if (parentId) {\n    graph.setGraph({\n      rankdir: \"LR\",\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: \"tight-tree\",\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  } else {\n    graph.setGraph({\n      rankdir: \"TB\",\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: \"tight-tree\",\n      // ranker: 'network-simplex'\n      isMultiGraph: true\n    });\n  }\n  graph.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  diagObj.db.extract(doc);\n  const states = diagObj.db.getStates();\n  const relations = diagObj.db.getRelations();\n  const keys2 = Object.keys(states);\n  for (const key of keys2) {\n    const stateDef = states[key];\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n      {\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      }\n    } else {\n      node = drawState(diagram2, stateDef);\n    }\n    if (stateDef.note) {\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + \"-note\",\n        note: stateDef.note,\n        type: \"note\"\n      };\n      const note = drawState(diagram2, noteDef);\n      if (stateDef.note.position === \"left of\") {\n        graph.setNode(node.id + \"-note\", note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + \"-note\", note);\n      }\n      graph.setParent(node.id, node.id + \"-group\");\n      graph.setParent(node.id + \"-note\", node.id + \"-group\");\n    } else {\n      graph.setNode(node.id, node);\n    }\n  }\n  log.debug(\"Count=\", graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function(relation) {\n    cnt++;\n    log.debug(\"Setting edge\", relation);\n    graph.setEdge(\n      relation.id1,\n      relation.id2,\n      {\n        relation,\n        width: getLabelWidth(relation.title),\n        height: conf.labelHeight * common.getRows(relation.title).length,\n        labelpos: \"c\"\n      },\n      \"id\" + cnt\n    );\n  });\n  layout(graph);\n  log.debug(\"Graph after layout\", graph.nodes());\n  const svgElem = diagram2.node();\n  graph.nodes().forEach(function(v) {\n    if (v !== void 0 && graph.node(v) !== void 0) {\n      log.warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\n        \"transform\",\n        \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + (transformationLog[v] ? transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\"\n      );\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\n      dividers.forEach((divider) => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) {\n            pWidth = parent.parentElement.getBBox().width;\n          }\n          pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute(\"x1\", 0 - pShift + 8);\n        divider.setAttribute(\"x2\", pWidth - pShift - 8);\n      });\n    } else {\n      log.debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n    }\n  });\n  let stateBox = svgElem.getBBox();\n  graph.edges().forEach(function(e) {\n    if (e !== void 0 && graph.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n  stateBox = svgElem.getBBox();\n  const stateInfo = {\n    id: parentId ? parentId : \"root\",\n    label: parentId ? parentId : \"root\",\n    width: 0,\n    height: 0\n  };\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n  log.debug(\"Doc rendered\", stateInfo, graph);\n  return stateInfo;\n};\nconst renderer = {\n  setConf,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"names":["idCache","set","key","val","get","k","keys","Object","size","length","idCache$1","drawStartState","g","append","attr","state","sizeUnit","padding","drawDivider","style","textHeight","drawSimpleState","stateDef","fontSize","text","id","classBox","node","getBBox","insert","width","height","radius","drawDescrState","addTspan","textEl","txt","isFirst2","tSpan","title","descriptions","titleBox","titleHeight","description","dividerMargin","isFirst","isSecond","forEach","descr","descrLine","descrBox","Math","max","addTitleAndBox","altBkg","pad","dblPad","orgBox","orgWidth","orgX","x","titleShift","titleWidth","startX","graphBox","doc","abs","lineY","drawEndState","miniPadding","drawForkJoinState","forkWidth","forkHeight","parentId","tmp","_drawLongText","_text","y","textElem","replace","lines","split","tHeight","noteMargin","line2","trim","span","textBounds","textWidth","drawNote","note","rectElem","drawState","elem","stateInfo","label","type","stateBox","edgeCount","drawEdge","path","relation","getRelationType","d","points","filter","p","Number","isNaN","lineData","lineFunction","curve","svgPath","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","u","rows","titleRows","maxWidth","minX","i","boundstmp","min","l","push","boxHeight","heightAdj","bounds","conf","transformationLog","setConf","insertMarkers","draw","_version","diagObj","securityLevel","sandboxElement","root","nodes","contentDocument","body","document","diagram2","select","rootDoc","db","getRootDoc","renderDoc","svgWidth","useMaxWidth","getLabelWidth","fontSizeFactor","domDocument","graph","compound","multigraph","edgeFreeDoc","stmt","setGraph","rankdir","ranker","ranksep","edgeLengthFactor","nodeSep","isMultiGraph","setDefaultEdgeLabel","extract","states","getStates","relations","getRelations","keys2","sub","boxBounds","compositTitleSize","noteDef","position","setNode","setParent","nodeCount","cnt","setEdge","id1","id2","labelHeight","labelpos","svgElem","v","JSON","stringify","dividers","querySelectorAll","divider","parent","parentElement","pWidth","pShift","parseInt","getAttribute","setAttribute","edges","e","edge","w","renderer","diagram","parser","styles","init","cnf"],"sourceRoot":""}