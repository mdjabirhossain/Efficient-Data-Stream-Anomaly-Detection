{"version":3,"file":"5083.af0e6bf7a16d0abcf988.js?v=af0e6bf7a16d0abcf988","mappings":"84BAEA,MAAMA,EAA0B,IAAIC,IAAI,CACpC,WACA,YACA,MACA,QACA,cAEJ,MAAMC,EAAaC,OAAOC,OAAOD,OAAOE,OAAO,OAC/C,MAAMC,EAAqB,WAI3B,MAAMC,EAAgB,IAAIC,IAE1B,SAASC,EAAOC,EAAKC,GACjB,UAAWD,IAAQ,WAAY,CAC3BA,EAAIC,EACR,KACK,CACDD,EAAIE,QAAUD,CAClB,CACJ,CACA,SAASE,EAAWC,EAAMC,GACtB,IAAKA,EAAOC,KAAM,CAEd,MAAMC,EAAa,EAAAC,sBAAA,QAA8BJ,GACjD,GAAIG,EAAY,CACZF,EAAOC,KAAOC,EAAWD,IAC7B,KACK,CACD,MAAM,IAAIG,MAAM,uEACpB,CACJ,CACA,OAAOJ,EAAOC,IAClB,CACA,SAASI,EAAiBL,GACtB,OAAOA,EAAOM,SAAWN,EAAOM,OAAS,CAAC,EAC9C,CACA,SAASC,EAAWR,EAAMC,EAAQC,GAC9B,GAAIhB,EAAwBuB,IAAIP,GAAO,CACnCQ,QAAQC,KAAK,GAAGZ,EAAWC,EAAMC,wBAA6BC,sBAC1D,8DACA,gBACJ,OAAO,KACX,CACA,OAAO,IACX,CACA,SAASU,EAAeZ,EAAMC,GAC1B,IAAKA,EAAOY,KAAM,CACd,GAAIZ,EAAOa,WAAY,CACnBb,EAAOY,KAAO,IAAI1B,IAAIc,EAAOa,WAAWC,OAAO1B,OAAOwB,KAAKP,EAAiBL,KAChF,KACK,CACD,MAAMY,EAAO,IAAI1B,IAAIE,OAAOwB,KAAKP,EAAiBL,KAClD,MAAMe,EAAY,EAAAC,WAAA,aAAwBjB,EAAKkB,WAC/C,GAAIF,EAAUG,OAAS,EAAG,CACtB,IAAK,MAAMC,KAAKJ,EAAW,CACvB,GAAIR,EAAWR,EAAMC,EAAQmB,EAAElB,MAAO,CAClCW,EAAKQ,IAAID,EAAElB,KACf,CACJ,CACJ,KACK,CACD,IAAK,MAAMoB,KAAKtB,EAAKkB,UAAW,CAC5B,KAAMI,KAAKC,YAAYL,YAAcV,EAAWR,EAAMC,EAAQqB,GAAI,CAC9DT,EAAKQ,IAAIC,EACb,CACJ,CACJ,CACArB,EAAOY,KAAOA,CAClB,CACJ,CACA,OAAOZ,EAAOY,IAClB,CAOO,SAASW,EAAoBC,EAAOC,GACvC,IAAIC,EAAgB,GACpB,MAAMC,EAAW,CACbC,SAASC,KAAcC,GACnBJ,EAAcK,SAAQC,GAAKA,EAAEJ,SAASC,KAAcC,KACpDJ,EAAgB,EACpB,GAEJ,SAASO,EAAKlC,EAAMC,EAAS,CAAC,GAC1B,IAAIkC,EAAIC,EACR,GAAIpC,aAAgB,EAAAqC,0BAA2B,CAC3C,GAAIX,EAAc,CACdA,EAAaG,SAAS7B,EAC1B,KACK,CACD2B,EAAcW,KAAKtC,EACvB,CACAA,EAAOA,EAAKA,IAChB,CACA,MAAMuC,EAAmB9C,EAAc+C,IAAIxC,GAC3C,GAAIuC,EAAkB,CAClB,MAAME,EAAgBF,EAAiBC,KAAKL,EAAKlC,EAAOC,QAAU,MAAQiC,SAAY,EAAIA,EAAK3C,GAC/F,GAAIiD,EAAe,CACf,OAAOA,CACX,CACJ,CACA,MAAMC,UAAuBjB,EAAMkB,UAC/BC,cACIC,SAASC,WACTC,KAAKC,SAAW,IACpB,CACAC,eAAeC,GACX,MAAMC,EAAUJ,KAAKC,SACrB,GAAIG,IAAY,KAAM,CAClB,MACJ,CACA,MAAMC,EAAeL,KAAKM,MAC1B,MAAMC,EAAgBJ,GAAY9D,EAClC,MAAMmB,EAASD,EAAiBL,GAChC,IAAK,MAAMsD,KAAOR,KAAKS,cAAe,CAClC,MAAMC,EAAWL,EAAaG,GAC9B,MAAMG,EAAQnD,EAAOgD,GACrB,GAAIG,IAAUC,UAAW,CACrBR,EAAQI,GAAOE,CACnB,KACK,CACD,MAAMG,EAAWN,EAAcC,GAC/B,GAAIE,IAAaG,EAAU,CACvB,QACJ,CACA,GAAIA,IAAaD,UAAW,CACxBR,EAAQU,oBAAoBH,EAAOE,EACvC,CACA,GAAIH,IAAaE,UAAW,CACxBR,EAAQW,iBAAiBJ,EAAOD,EACpC,CACJ,CACJ,CACJ,CACAM,oBACIhB,KAAKE,gBACT,CACAe,mBAAmBC,GACflB,KAAKE,eAAegB,EACxB,CACAC,SAII,MAAMC,EAAUpB,KAAKM,MAAMe,eAC3B,GAAIrB,KAAKsB,OAASV,WAAaZ,KAAKuB,WAAaH,EAAS,CACtDpB,KAAKsB,KAAQxE,IACT,GAAIkD,KAAKC,WAAa,KAAM,CACxBD,KAAKC,SAAWnD,CACpB,CACA,GAAIsE,IAAY,KAAM,CAClBxE,EAAOwE,EAAStE,EACpB,CACAkD,KAAKuB,SAAWH,CAAO,CAE/B,CAIA,MAAMI,EAAgB,CAAE3E,IAAKmD,KAAKsB,MAClC,MAAMG,EAAmBzB,KAAKS,cAAgB,CAAC,EAC/C,MAAMiB,EAAc7D,EAAeZ,EAAMC,GACzC,MAAMmD,EAAeL,KAAKM,MAC1B,IAAK,MAAMqB,KAAKtB,EAAc,CAC1B,MAAMuB,EAAIvB,EAAasB,GACvB,GAAID,EAAYhE,IAAIiE,GAAI,CACpBF,EAAgBE,GAAKC,CACzB,KACK,CAGDJ,EAAcG,IAAM,YAAc,QAAUA,GAAKC,CACrD,CACJ,CACA,OAAOlD,EAAMmD,cAAc7E,EAAWC,EAAMC,GAASsE,EACzD,EAEJ,MAAMM,EAAiBpD,EAAMqD,YAAW,CAACzB,EAAOzD,IAAQ6B,EAAMmD,cAAclC,EAAgBrD,OAAO0F,OAAO1F,OAAO0F,OAAO,CAAC,EAAG1B,GAAQ,CAAEe,eAAgBxE,IAAQyD,IAAU,MAAQA,SAAe,OAAS,EAAIA,EAAM2B,YAClN,IAAKvF,EAAcgB,IAAIT,GAAO,CAC1BP,EAAcwF,IAAIjF,EAAM,IAAIN,IAChC,CAEAD,EAAc+C,IAAIxC,GAAMiF,KAAK7C,EAAKnC,EAAOC,QAAU,MAAQkC,SAAY,EAAIA,EAAK5C,EAAoBqF,GACpG,OAAOA,CACX,CACA,MAAO,CAAE3C,OAAMN,WACnB,C,4BC5LO,MAAM,KAAEM,GAASV,EAAoB,KAAO,IAAA0D,+BCD5C,MAAMC,EAAYjD,GAAK,IAAAkD,eAAe,CAAE7E,OAAQ,CAAE8E,SAAU,YAEnEF,EAAUG,YAAc,oBCFjB,MAAMC,EAAgBrD,GAAK,IAAAsD,mBAAmB,CAAEjF,OAAQ,CAAE8E,SAAU,YAE3EE,EAAcD,YAAc,wBCFrB,MAAMG,EAASvD,GAAK,IAAAwD,aAE3BD,EAAOH,YAAc,iBCFd,MAAMK,EAAiBzD,GAAK,IAAA0D,qBAEnCD,EAAeL,YAAc,yBCFtB,MAAMO,EAAS3D,GAAK,IAAA4D,aAE3BD,EAAOP,YAAc,iBCFd,MAAMS,EAAQ7D,GAAK,IAAA8D,YAE1BD,EAAMT,YAAc,gBCFb,MAAMW,EAAa/D,GAAK,IAAAgE,iBAE/BD,EAAWX,YAAc,qBCFlB,MAAMa,EAAiBjE,GAAK,IAAAkE,qBAEnCD,EAAeb,YAAc,yBCFtB,MAAMe,EAASnE,GAAK,IAAAoE,aAE3BD,EAAOf,YAAc,iBCFd,MAAMiB,EAAOrE,GAAK,IAAAsE,WAEzBD,EAAKjB,YAAc,eCFZ,MAAMmB,EAAWvE,GAAK,IAAAwE,cAAc,CAAEnG,OAAQ,CAAE8E,SAAU,YAEjEoB,EAASnB,YAAc,mBCFhB,MAAMqB,EAAWzE,GAAK,IAAA0E,cAAc,CACvCrG,OAAQ,CACJ8E,SAAU,SACVwB,QAAS,WAIjBF,EAASrB,YAAc,mBCJhB,MAAMwB,EAAe5E,GAAK,IAAA6E,kBAAkB,CAC/CxG,OAAQ,CAAEyG,QAAS,kBAGvBF,EAAaxB,YAAc,uBACpB,MAAM2B,EAAc/E,GAAK,IAAAgF,iBAAiB,CAAE3G,OAAQ,CAAEyG,QAAS,iBAEtEC,EAAY3B,YAAc,sBACnB,MAAM6B,EAAWjF,GAAK,IAAAkF,eAE7BD,EAAS7B,YAAc,mBCbhB,MAAM+B,EAAYnF,GAAK,IAAAoF,eAAe,CACzC/G,OAAQ,CAAE8E,SAAU,YAGxBgC,EAAU/B,YAAc,oBCJjB,MAAMiC,EAAuBrF,GAAK,IAAAsF,2BAEzCD,EAAqBjC,YAAc,+BCF5B,MAAMmC,EAASvF,GAAK,IAAAwF,aAE3BD,EAAOnC,YAAc,iBCFd,MAAMqC,EAAazF,GAAK,IAAA0F,gBAAgB,CAC3CrH,OAAQ,CAAEsH,SAAU,YAGxBF,EAAWrC,YAAc,qBCJlB,MAAMwC,EAAU5F,GAAK,IAAA6F,cAE5BD,EAAQxC,YAAc,kBCFf,MAAM0C,EAAU9F,GAAK,IAAA+F,cAE5BD,EAAQ1C,YAAc,kBCFf,MAAM4C,EAAOhG,GAAK,IAAAiG,WAEzBD,EAAK5C,YAAc,eCFZ,MAAM8C,EAAWlG,GAAK,IAAAmG,cAAc,CAAE9H,OAAQ,CAAE+H,SAAU,qBAEjEF,EAAS9C,YAAc,mBCFhB,MAAMiD,EAAcrG,GAAK,IAAAsG,iBAAiB,CAC7CjI,OAAQ,CAAE8E,SAAU,SAAUwB,QAAS,WAG3C0B,EAAYjD,YAAc,sBCJnB,MAAMmD,EAASvG,GAAK,IAAAwG,aAE3BD,EAAOnD,YAAc,iBCFd,MAAMqD,EAAWzG,GAAK,IAAA0G,cAAc,CAAE1I,KAAM,gBAEnDyI,EAASrD,YAAc,mBCFhB,MAAMuD,EAAe3G,GAAK,IAAA4G,kBAEjC,CAAE5I,KAAM,qBAER2I,EAAavD,YAAc,uBCJpB,MAAMyD,EAAQ7G,GAAK,IAAA8G,WAAW,CAAEzI,OAAQ,CAAE8E,SAAU,YAE3D0D,EAAMzD,YAAc,gBCFb,MAAM2D,EAAa/G,GAAK,IAAAgH,gBAAgB,CAAE3I,OAAQ,CAAE8E,SAAU,YAErE4D,EAAW3D,YAAc,qBCFlB,MAAM6D,EAASjH,GAAK,IAAAkH,YAAY,CACnC7I,OAAQ,CACJ8E,SAAU,SACVwB,QAAS,WAIjBsC,EAAO7D,YAAc,iBCPd,MAAM+D,EAASnH,GAAK,IAAAoH,YAAY,CACnC/I,OAAQ,CACJ8E,SAAU,SACVwB,QAAS,WAIjBwC,EAAO/D,YAAc,iBCPd,MAAMiE,EAAWrH,GAAK,IAAAsH,eAE7BD,EAASjE,YAAc,mBCFhB,MAAMmE,EAASvH,GAAK,IAAAwH,YAAY,CAAEnJ,OAAQ,CAAE8E,SAAU,YAE7DoE,EAAOnE,YAAc,iBCFd,MAAMqE,EAAczH,GAAK,IAAA0H,kBAEhCD,EAAYrE,YAAc,sBCFnB,MAAMuE,EAAS3H,GAAK,IAAA4H,YAAY,CAAEvJ,OAAQ,CAAE8E,SAAU,YAE7DwE,EAAOvE,YAAc,iBCFd,MAAMyE,GAAW7H,GAAK,IAAA8H,eAE7BD,GAASzE,YAAc,mBCFhB,MAAM2E,GAAM/H,GAAK,IAAAgI,UAExBD,GAAI3E,YAAc,cCFX,MAAM6E,GAAOjI,GAAK,IAAAkI,UAAU,CAAE7J,OAAQ,CAAE8E,SAAU,YAEzD8E,GAAK7E,YAAc,eCFZ,MAAM+E,GAAWnI,GAAK,IAAAoI,cAAc,CACvC/J,OAAQ,CAAE8E,SAAU,YAGxBgF,GAAS/E,YAAc,mBCJhB,MAAMiF,GAAYrI,GAAK,IAAAsI,eAAe,CACzCjK,OAAQ,CAAE8E,SAAU,SAAUwB,QAAS,WAG3C0D,GAAUjF,YAAc,oBCJjB,MAAMmF,GAAUvI,GAAK,IAAAwI,cAE5BD,GAAQnF,YAAc,kBCFf,MAAMqF,GAAUzI,GAAK,IAAA0I,cAE5BD,GAAQrF,YAAc,kBCFf,MAAMuF,GAAW3I,GAAK,IAAA4I,cAAc,CACvCvK,OAAQ,CAAE+H,SAAU,kBAAmByC,SAAU,qBAGrDF,GAASvF,YAAc,mBCJhB,MAAM0F,GAAW9I,GAAK,IAAA+I,eAE7BD,GAAS1F,YAAc,mBCChB,MAAM4F,GAAShJ,GAAK,IAAAiJ,YAAY,CACnC5K,OAAQ,CACJ8E,SAAU,SACVwB,QAAS,WAIjBqE,GAAO5F,YAAc,gB","sources":["webpack://@jupyterlab/application-top/./node_modules/@microsoft/fast-react-wrapper/dist/esm/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/wrap.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/accordion/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/accordion-item/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/anchor/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/anchored-region/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/avatar/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/badge/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/breadcrumb/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/breadcrumb-item/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/button/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/card/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/checkbox/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/combobox/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/data-grid/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/date-field/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/design-system-provider/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/dialog/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/disclosure/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/divider/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/listbox/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/menu/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/menu-item/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/number-field/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/option/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/progress/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/progress-ring/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/radio/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/radio-group/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/search/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/select/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/skeleton/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/slider/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/slider-label/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/switch/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/tab-panel/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/tab/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/tabs/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/text-area/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/text-field/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/toolbar/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/tooltip/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/tree-item/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/tree-view/index.js","webpack://@jupyterlab/application-top/./node_modules/@jupyter/react-components/lib/drafts/picker/index.js"],"sourcesContent":["import { FASTElementDefinition, Observable, } from \"@microsoft/fast-element\";\nimport { FoundationElementRegistry, } from \"@microsoft/fast-foundation\";\nconst reservedReactProperties = new Set([\n    \"children\",\n    \"localName\",\n    \"ref\",\n    \"style\",\n    \"className\",\n]);\nconst emptyProps = Object.freeze(Object.create(null));\nconst DEFAULT_CACHE_NAME = \"_default\";\n// This will be a two levels cache Map<type, Map<name, ReactWrapper>>\n// to distinguish components of same type but different tag name.\n// Default name: '_default'\nconst wrappersCache = new Map();\n// There are 2 kinds of refs and there's no built in React API to set one.\nfunction setRef(ref, value) {\n    if (typeof ref === \"function\") {\n        ref(value);\n    }\n    else {\n        ref.current = value;\n    }\n}\nfunction getTagName(type, config) {\n    if (!config.name) {\n        /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */\n        const definition = FASTElementDefinition.forType(type);\n        if (definition) {\n            config.name = definition.name;\n        }\n        else {\n            throw new Error(\"React wrappers must wrap a FASTElement or be configured with a name.\");\n        }\n    }\n    return config.name;\n}\nfunction getElementEvents(config) {\n    return config.events || (config.events = {});\n}\nfunction keyIsValid(type, config, name) {\n    if (reservedReactProperties.has(name)) {\n        console.warn(`${getTagName(type, config)} contains property ${name} which is a React ` +\n            `reserved property. It will be used by React and not set on ` +\n            `the element.`);\n        return false;\n    }\n    return true;\n}\nfunction getElementKeys(type, config) {\n    if (!config.keys) {\n        if (config.properties) {\n            config.keys = new Set(config.properties.concat(Object.keys(getElementEvents(config))));\n        }\n        else {\n            const keys = new Set(Object.keys(getElementEvents(config)));\n            const accessors = Observable.getAccessors(type.prototype);\n            if (accessors.length > 0) {\n                for (const a of accessors) {\n                    if (keyIsValid(type, config, a.name)) {\n                        keys.add(a.name);\n                    }\n                }\n            }\n            else {\n                for (const p in type.prototype) {\n                    if (!(p in HTMLElement.prototype) && keyIsValid(type, config, p)) {\n                        keys.add(p);\n                    }\n                }\n            }\n            config.keys = keys;\n        }\n    }\n    return config.keys;\n}\n/**\n * @param React - The React module, typically imported from the `react` npm\n * package\n * @param designSystem - A design system to register the components with.\n * @public\n */\nexport function provideReactWrapper(React, designSystem) {\n    let registrations = [];\n    const registry = {\n        register(container, ...rest) {\n            registrations.forEach(x => x.register(container, ...rest));\n            registrations = [];\n        },\n    };\n    function wrap(type, config = {}) {\n        var _a, _b;\n        if (type instanceof FoundationElementRegistry) {\n            if (designSystem) {\n                designSystem.register(type);\n            }\n            else {\n                registrations.push(type);\n            }\n            type = type.type;\n        }\n        const cachedCandidates = wrappersCache.get(type);\n        if (cachedCandidates) {\n            const cachedWrapper = cachedCandidates.get((_a = config.name) !== null && _a !== void 0 ? _a : DEFAULT_CACHE_NAME);\n            if (cachedWrapper) {\n                return cachedWrapper;\n            }\n        }\n        class ReactComponent extends React.Component {\n            constructor() {\n                super(...arguments);\n                this._element = null;\n            }\n            _updateElement(oldProps) {\n                const element = this._element;\n                if (element === null) {\n                    return;\n                }\n                const currentProps = this.props;\n                const previousProps = oldProps || emptyProps;\n                const events = getElementEvents(config);\n                for (const key in this._elementProps) {\n                    const newValue = currentProps[key];\n                    const event = events[key];\n                    if (event === undefined) {\n                        element[key] = newValue;\n                    }\n                    else {\n                        const oldValue = previousProps[key];\n                        if (newValue === oldValue) {\n                            continue;\n                        }\n                        if (oldValue !== undefined) {\n                            element.removeEventListener(event, oldValue);\n                        }\n                        if (newValue !== undefined) {\n                            element.addEventListener(event, newValue);\n                        }\n                    }\n                }\n            }\n            componentDidMount() {\n                this._updateElement();\n            }\n            componentDidUpdate(old) {\n                this._updateElement(old);\n            }\n            render() {\n                // Since refs only get fulfilled once, pass a new one if the user's\n                // ref changed. This allows refs to be fulfilled as expected, going from\n                // having a value to null.\n                const userRef = this.props.__forwardedRef;\n                if (this._ref === undefined || this._userRef !== userRef) {\n                    this._ref = (value) => {\n                        if (this._element === null) {\n                            this._element = value;\n                        }\n                        if (userRef !== null) {\n                            setRef(userRef, value);\n                        }\n                        this._userRef = userRef;\n                    };\n                }\n                // Filter class properties and pass the remaining attributes to React.\n                // This allows attributes to use framework rules\n                // for setting attributes and render correctly under SSR.\n                const newReactProps = { ref: this._ref };\n                const newElementProps = (this._elementProps = {});\n                const elementKeys = getElementKeys(type, config);\n                const currentProps = this.props;\n                for (const k in currentProps) {\n                    const v = currentProps[k];\n                    if (elementKeys.has(k)) {\n                        newElementProps[k] = v;\n                    }\n                    else {\n                        // React does *not* handle `className` for custom elements so\n                        // coerce it to `class` so it's handled correctly.\n                        newReactProps[k === \"className\" ? \"class\" : k] = v;\n                    }\n                }\n                return React.createElement(getTagName(type, config), newReactProps);\n            }\n        }\n        const reactComponent = React.forwardRef((props, ref) => React.createElement(ReactComponent, Object.assign(Object.assign({}, props), { __forwardedRef: ref }), props === null || props === void 0 ? void 0 : props.children));\n        if (!wrappersCache.has(type)) {\n            wrappersCache.set(type, new Map());\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        wrappersCache.get(type).set((_b = config.name) !== null && _b !== void 0 ? _b : DEFAULT_CACHE_NAME, reactComponent);\n        return reactComponent;\n    }\n    return { wrap, registry };\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { provideJupyterDesignSystem } from '@jupyter/web-components';\nimport { provideReactWrapper } from '@microsoft/fast-react-wrapper';\nimport React from 'react';\nexport const { wrap } = provideReactWrapper(React, provideJupyterDesignSystem());\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpAccordion } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Accordion = wrap(jpAccordion(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nAccordion.displayName = 'Jupyter.Accordion';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpAccordionItem } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const AccordionItem = wrap(jpAccordionItem(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nAccordionItem.displayName = 'Jupyter.AccordionItem';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpAnchor } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Anchor = wrap(jpAnchor());\n// @ts-expect-error unknown property\nAnchor.displayName = 'Jupyter.Anchor';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpAnchoredRegion } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const AnchoredRegion = wrap(jpAnchoredRegion());\n// @ts-expect-error unknown property\nAnchoredRegion.displayName = 'Jupyter.AnchoredRegion';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpAvatar } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Avatar = wrap(jpAvatar());\n// @ts-expect-error unknown property\nAvatar.displayName = 'Jupyter.Avatar';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpBadge } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Badge = wrap(jpBadge());\n// @ts-expect-error unknown property\nBadge.displayName = 'Jupyter.Badge';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpBreadcrumb } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Breadcrumb = wrap(jpBreadcrumb());\n// @ts-expect-error unknown property\nBreadcrumb.displayName = 'Jupyter.Breadcrumb';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpBreadcrumbItem } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const BreadcrumbItem = wrap(jpBreadcrumbItem());\n// @ts-expect-error unknown property\nBreadcrumbItem.displayName = 'Jupyter.BreadcrumbItem';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpButton } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Button = wrap(jpButton());\n// @ts-expect-error unknown property\nButton.displayName = 'Jupyter.Button';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpCard } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Card = wrap(jpCard());\n// @ts-expect-error unknown property\nCard.displayName = 'Jupyter.Card';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpCheckbox } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Checkbox = wrap(jpCheckbox(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nCheckbox.displayName = 'Jupyter.Checkbox';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpCombobox } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Combobox = wrap(jpCombobox(), {\n    events: {\n        onChange: 'change',\n        onInput: 'input'\n    }\n});\n// @ts-expect-error unknown property\nCombobox.displayName = 'Jupyter.Combobox';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpDataGrid, jpDataGridCell, jpDataGridRow } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\n// WARNING The wrapping needs to be called in order (from bottom to top DOM elements)\n// Otherwise during the wrapping the tag for sub elements won't be resolved and this\n// will contaminate the standard web component.\nexport const DataGridCell = wrap(jpDataGridCell(), {\n    events: { onFocus: 'cell-focused' }\n});\n// @ts-expect-error unknown property\nDataGridCell.displayName = 'Jupyter.DataGridCell';\nexport const DataGridRow = wrap(jpDataGridRow(), { events: { onFocus: 'row-focused' } });\n// @ts-expect-error unknown property\nDataGridRow.displayName = 'Jupyter.DataGridRow';\nexport const DataGrid = wrap(jpDataGrid());\n// @ts-expect-error unknown property\nDataGrid.displayName = 'Jupyter.DataGrid';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpDateField } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const DateField = wrap(jpDateField(), {\n    events: { onChange: 'change' }\n});\n// @ts-expect-error unknown property\nDateField.displayName = 'Jupyter.DateField';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpDesignSystemProvider } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const DesignSystemProvider = wrap(jpDesignSystemProvider());\n// @ts-expect-error unknown property\nDesignSystemProvider.displayName = 'Jupyter.DesignSystemProvider';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpDialog } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Dialog = wrap(jpDialog());\n// @ts-expect-error unknown property\nDialog.displayName = 'Jupyter.Dialog';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpDisclosure } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Disclosure = wrap(jpDisclosure(), {\n    events: { onToggle: 'toggle' }\n});\n// @ts-expect-error unknown property\nDisclosure.displayName = 'Jupyter.Disclosure';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpDivider } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Divider = wrap(jpDivider());\n// @ts-expect-error unknown property\nDivider.displayName = 'Jupyter.Divider';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpListbox } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Listbox = wrap(jpListbox());\n// @ts-expect-error unknown property\nListbox.displayName = 'Jupyter.Listbox';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpMenu } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Menu = wrap(jpMenu());\n// @ts-expect-error unknown property\nMenu.displayName = 'Jupyter.Menu';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpMenuItem } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const MenuItem = wrap(jpMenuItem(), { events: { onExpand: 'expanded-change' } });\n// @ts-expect-error unknown property\nMenuItem.displayName = 'Jupyter.MenuItem';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpNumberField } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const NumberField = wrap(jpNumberField(), {\n    events: { onChange: 'change', onInput: 'input' }\n});\n// @ts-expect-error unknown property\nNumberField.displayName = 'Jupyter.NumberField';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpOption } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Option = wrap(jpOption());\n// @ts-expect-error unknown property\nOption.displayName = 'Juypter.Option';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpProgress } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Progress = wrap(jpProgress(), { name: 'jp-progress' });\n// @ts-expect-error unknown property\nProgress.displayName = 'Jupyter.Progress';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpProgressRing } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const ProgressRing = wrap(jpProgressRing(), \n// Name need to be exported otherwise a `jp-progress` element is instantiated\n{ name: 'jp-progress-ring' });\n// @ts-expect-error unknown property\nProgressRing.displayName = 'Jupyter.ProgressRing';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpRadio } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Radio = wrap(jpRadio(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nRadio.displayName = 'Jupyter.Radio';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpRadioGroup } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const RadioGroup = wrap(jpRadioGroup(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nRadioGroup.displayName = 'Jupyter.RadioGroup';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpSearch } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Search = wrap(jpSearch(), {\n    events: {\n        onChange: 'change',\n        onInput: 'input'\n    }\n});\n// @ts-expect-error unknown property\nSearch.displayName = 'Jupyter.Search';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpSelect } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Select = wrap(jpSelect(), {\n    events: {\n        onChange: 'change',\n        onInput: 'input'\n    }\n});\n// @ts-expect-error unknown property\nSelect.displayName = 'Jupyter.Select';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpSkeleton } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Skeleton = wrap(jpSkeleton());\n// @ts-expect-error unknown property\nSkeleton.displayName = 'Jupyter.Skeleton';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpSlider } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Slider = wrap(jpSlider(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nSlider.displayName = 'Jupyter.Slider';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpSliderLabel } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const SliderLabel = wrap(jpSliderLabel());\n// @ts-expect-error unknown property\nSliderLabel.displayName = 'Jupyter.SliderLabel';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpSwitch } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Switch = wrap(jpSwitch(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nSwitch.displayName = 'Jupyter.Switch';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpTabPanel } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const TabPanel = wrap(jpTabPanel());\n// @ts-expect-error unknown property\nTabPanel.displayName = 'Jupyter.TabPanel';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpTab } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Tab = wrap(jpTab());\n// @ts-expect-error unknown property\nTab.displayName = 'Jupyter.Tab';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpTabs } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Tabs = wrap(jpTabs(), { events: { onChange: 'change' } });\n// @ts-expect-error unknown property\nTabs.displayName = 'Jupyter.Tabs';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpTextArea } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const TextArea = wrap(jpTextArea(), {\n    events: { onChange: 'change' }\n});\n// @ts-expect-error unknown property\nTextArea.displayName = 'Jupyter.TextArea';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpTextField } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const TextField = wrap(jpTextField(), {\n    events: { onChange: 'change', onInput: 'input' }\n});\n// @ts-expect-error unknown property\nTextField.displayName = 'Jupyter.TextField';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpToolbar } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Toolbar = wrap(jpToolbar());\n// @ts-expect-error unknown property\nToolbar.displayName = 'Jupyter.Toolbar';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpTooltip } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const Tooltip = wrap(jpTooltip());\n// @ts-expect-error unknown property\nTooltip.displayName = 'Jupyter.Tooltip';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpTreeItem } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const TreeItem = wrap(jpTreeItem(), {\n    events: { onExpand: 'expanded-change', onSelect: 'selected-change' }\n});\n// @ts-expect-error unknown property\nTreeItem.displayName = 'Jupyter.TreeItem';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpTreeView } from '@jupyter/web-components';\nimport { wrap } from '../wrap';\nexport const TreeView = wrap(jpTreeView());\n// @ts-expect-error unknown property\nTreeView.displayName = 'Jupyter.TreeView';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jpPicker } from '@jupyter/web-components';\nimport { wrap } from '../../wrap';\n/**\n * @alpha\n */\nexport const Picker = wrap(jpPicker(), {\n    events: {\n        onChange: 'change',\n        onInput: 'input'\n    }\n});\n// @ts-expect-error unknown property\nPicker.displayName = 'Jupyter.Picker';\n"],"names":["reservedReactProperties","Set","emptyProps","Object","freeze","create","DEFAULT_CACHE_NAME","wrappersCache","Map","setRef","ref","value","current","getTagName","type","config","name","definition","FASTElementDefinition","Error","getElementEvents","events","keyIsValid","has","console","warn","getElementKeys","keys","properties","concat","accessors","Observable","prototype","length","a","add","p","HTMLElement","provideReactWrapper","React","designSystem","registrations","registry","register","container","rest","forEach","x","wrap","_a","_b","FoundationElementRegistry","push","cachedCandidates","get","cachedWrapper","ReactComponent","Component","constructor","super","arguments","this","_element","_updateElement","oldProps","element","currentProps","props","previousProps","key","_elementProps","newValue","event","undefined","oldValue","removeEventListener","addEventListener","componentDidMount","componentDidUpdate","old","render","userRef","__forwardedRef","_ref","_userRef","newReactProps","newElementProps","elementKeys","k","v","createElement","reactComponent","forwardRef","assign","children","set","provideJupyterDesignSystem","Accordion","jpAccordion","onChange","displayName","AccordionItem","jpAccordionItem","Anchor","jpAnchor","AnchoredRegion","jpAnchoredRegion","Avatar","jpAvatar","Badge","jpBadge","Breadcrumb","jpBreadcrumb","BreadcrumbItem","jpBreadcrumbItem","Button","jpButton","Card","jpCard","Checkbox","jpCheckbox","Combobox","jpCombobox","onInput","DataGridCell","jpDataGridCell","onFocus","DataGridRow","jpDataGridRow","DataGrid","jpDataGrid","DateField","jpDateField","DesignSystemProvider","jpDesignSystemProvider","Dialog","jpDialog","Disclosure","jpDisclosure","onToggle","Divider","jpDivider","Listbox","jpListbox","Menu","jpMenu","MenuItem","jpMenuItem","onExpand","NumberField","jpNumberField","Option","jpOption","Progress","jpProgress","ProgressRing","jpProgressRing","Radio","jpRadio","RadioGroup","jpRadioGroup","Search","jpSearch","Select","jpSelect","Skeleton","jpSkeleton","Slider","jpSlider","SliderLabel","jpSliderLabel","Switch","jpSwitch","TabPanel","jpTabPanel","Tab","jpTab","Tabs","jpTabs","TextArea","jpTextArea","TextField","jpTextField","Toolbar","jpToolbar","Tooltip","jpTooltip","TreeItem","jpTreeItem","onSelect","TreeView","jpTreeView","Picker","jpPicker"],"sourceRoot":""}