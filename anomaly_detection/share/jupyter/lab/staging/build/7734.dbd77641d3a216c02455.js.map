{"version":3,"file":"7734.dbd77641d3a216c02455.js?v=dbd77641d3a216c02455","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/mermaid/dist/edges-5ec2587c.js"],"sourcesContent":["import { l as log, m as evaluate, c as getConfig, J as decodeEntities, d as sanitizeText, u as utils } from \"./mermaid-04fb0060.js\";\nimport { select, line, curveBasis } from \"d3\";\nimport { a as createText } from \"./createText-a48a4c90.js\";\nconst insertMarkers = (elem, markerArray, type, id) => {\n  markerArray.forEach((markerName) => {\n    markers[markerName](elem, type, id);\n  });\n};\nconst extension = (elem, type, id) => {\n  log.trace(\"Making markers for \", id);\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-extensionStart\").attr(\"class\", \"marker extension \" + type).attr(\"refX\", 18).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,7 L18,13 V 1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-extensionEnd\").attr(\"class\", \"marker extension \" + type).attr(\"refX\", 1).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,1 V 13 L18,7 Z\");\n};\nconst composition = (elem, type, id) => {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-compositionStart\").attr(\"class\", \"marker composition \" + type).attr(\"refX\", 18).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-compositionEnd\").attr(\"class\", \"marker composition \" + type).attr(\"refX\", 1).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n};\nconst aggregation = (elem, type, id) => {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-aggregationStart\").attr(\"class\", \"marker aggregation \" + type).attr(\"refX\", 18).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-aggregationEnd\").attr(\"class\", \"marker aggregation \" + type).attr(\"refX\", 1).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n};\nconst dependency = (elem, type, id) => {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-dependencyStart\").attr(\"class\", \"marker dependency \" + type).attr(\"refX\", 6).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 5,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-dependencyEnd\").attr(\"class\", \"marker dependency \" + type).attr(\"refX\", 13).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L14,7 L9,1 Z\");\n};\nconst lollipop = (elem, type, id) => {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-lollipopStart\").attr(\"class\", \"marker lollipop \" + type).attr(\"refX\", 13).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"circle\").attr(\"stroke\", \"black\").attr(\"fill\", \"transparent\").attr(\"cx\", 7).attr(\"cy\", 7).attr(\"r\", 6);\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-lollipopEnd\").attr(\"class\", \"marker lollipop \" + type).attr(\"refX\", 1).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"circle\").attr(\"stroke\", \"black\").attr(\"fill\", \"transparent\").attr(\"cx\", 7).attr(\"cy\", 7).attr(\"r\", 6);\n};\nconst point = (elem, type, id) => {\n  elem.append(\"marker\").attr(\"id\", id + \"_\" + type + \"-pointEnd\").attr(\"class\", \"marker \" + type).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 6).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 12).attr(\"markerHeight\", 12).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\n  elem.append(\"marker\").attr(\"id\", id + \"_\" + type + \"-pointStart\").attr(\"class\", \"marker \" + type).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 4.5).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 12).attr(\"markerHeight\", 12).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0 5 L 10 10 L 10 0 z\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\n};\nconst circle$1 = (elem, type, id) => {\n  elem.append(\"marker\").attr(\"id\", id + \"_\" + type + \"-circleEnd\").attr(\"class\", \"marker \" + type).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 11).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 11).attr(\"markerHeight\", 11).attr(\"orient\", \"auto\").append(\"circle\").attr(\"cx\", \"5\").attr(\"cy\", \"5\").attr(\"r\", \"5\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\n  elem.append(\"marker\").attr(\"id\", id + \"_\" + type + \"-circleStart\").attr(\"class\", \"marker \" + type).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", -1).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 11).attr(\"markerHeight\", 11).attr(\"orient\", \"auto\").append(\"circle\").attr(\"cx\", \"5\").attr(\"cy\", \"5\").attr(\"r\", \"5\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\n};\nconst cross = (elem, type, id) => {\n  elem.append(\"marker\").attr(\"id\", id + \"_\" + type + \"-crossEnd\").attr(\"class\", \"marker cross \" + type).attr(\"viewBox\", \"0 0 11 11\").attr(\"refX\", 12).attr(\"refY\", 5.2).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 11).attr(\"markerHeight\", 11).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,1 l 9,9 M 10,1 l -9,9\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 2).style(\"stroke-dasharray\", \"1,0\");\n  elem.append(\"marker\").attr(\"id\", id + \"_\" + type + \"-crossStart\").attr(\"class\", \"marker cross \" + type).attr(\"viewBox\", \"0 0 11 11\").attr(\"refX\", -1).attr(\"refY\", 5.2).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 11).attr(\"markerHeight\", 11).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,1 l 9,9 M 10,1 l -9,9\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 2).style(\"stroke-dasharray\", \"1,0\");\n};\nconst barb = (elem, type, id) => {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-barbEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 14).attr(\"markerUnits\", \"strokeWidth\").attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n};\nconst markers = {\n  extension,\n  composition,\n  aggregation,\n  dependency,\n  lollipop,\n  point,\n  circle: circle$1,\n  cross,\n  barb\n};\nconst insertMarkers$1 = insertMarkers;\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\nfunction addHtmlLabel(node) {\n  const fo = select(document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\"));\n  const div = fo.append(\"xhtml:div\");\n  const label = node.label;\n  const labelClass = node.isNode ? \"nodeLabel\" : \"edgeLabel\";\n  div.html(\n    '<span class=\"' + labelClass + '\" ' + (node.labelStyle ? 'style=\"' + node.labelStyle + '\"' : \"\") + \">\" + label + \"</span>\"\n  );\n  applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"inline-block\");\n  div.style(\"white-space\", \"nowrap\");\n  div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n  return fo.node();\n}\nconst createLabel = (_vertexText, style, isTitle, isNode) => {\n  let vertexText = _vertexText || \"\";\n  if (typeof vertexText === \"object\") {\n    vertexText = vertexText[0];\n  }\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    vertexText = vertexText.replace(/\\\\n|\\n/g, \"<br />\");\n    log.info(\"vertexText\" + vertexText);\n    const node = {\n      isNode,\n      label: decodeEntities(vertexText).replace(\n        /fa[blrs]?:fa-[\\w-]+/g,\n        (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\n      ),\n      labelStyle: style.replace(\"fill:\", \"color:\")\n    };\n    let vertexNode = addHtmlLabel(node);\n    return vertexNode;\n  } else {\n    const svgLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n    svgLabel.setAttribute(\"style\", style.replace(\"color:\", \"fill:\"));\n    let rows = [];\n    if (typeof vertexText === \"string\") {\n      rows = vertexText.split(/\\\\n|\\n|<br\\s*\\/?>/gi);\n    } else if (Array.isArray(vertexText)) {\n      rows = vertexText;\n    } else {\n      rows = [];\n    }\n    for (const row of rows) {\n      const tspan = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n      tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n      tspan.setAttribute(\"dy\", \"1em\");\n      tspan.setAttribute(\"x\", \"0\");\n      if (isTitle) {\n        tspan.setAttribute(\"class\", \"title-row\");\n      } else {\n        tspan.setAttribute(\"class\", \"row\");\n      }\n      tspan.textContent = row.trim();\n      svgLabel.appendChild(tspan);\n    }\n    return svgLabel;\n  }\n};\nconst createLabel$1 = createLabel;\nconst labelHelper = async (parent, node, _classes, isNode) => {\n  let classes;\n  const useHtmlLabels = node.useHtmlLabels || evaluate(getConfig().flowchart.htmlLabels);\n  if (!_classes) {\n    classes = \"node default\";\n  } else {\n    classes = _classes;\n  }\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId || node.id);\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"label\").attr(\"style\", node.labelStyle);\n  let labelText;\n  if (node.labelText === void 0) {\n    labelText = \"\";\n  } else {\n    labelText = typeof node.labelText === \"string\" ? node.labelText : node.labelText[0];\n  }\n  const textNode = label.node();\n  let text;\n  if (node.labelType === \"markdown\") {\n    text = createText(label, sanitizeText(decodeEntities(labelText), getConfig()), {\n      useHtmlLabels,\n      width: node.width || getConfig().flowchart.wrappingWidth,\n      classes: \"markdown-node-label\"\n    });\n  } else {\n    text = textNode.appendChild(\n      createLabel$1(\n        sanitizeText(decodeEntities(labelText), getConfig()),\n        node.labelStyle,\n        false,\n        isNode\n      )\n    );\n  }\n  let bbox = text.getBBox();\n  const halfPadding = node.padding / 2;\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    const images = div.getElementsByTagName(\"img\");\n    if (images) {\n      const noImgText = labelText.replace(/<img[^>]*>/g, \"\").trim() === \"\";\n      await Promise.all(\n        [...images].map(\n          (img) => new Promise((res) => {\n            function setupImage() {\n              img.style.display = \"flex\";\n              img.style.flexDirection = \"column\";\n              if (noImgText) {\n                const bodyFontSize = getConfig().fontSize ? getConfig().fontSize : window.getComputedStyle(document.body).fontSize;\n                const enlargingFactor = 5;\n                const width = parseInt(bodyFontSize, 10) * enlargingFactor + \"px\";\n                img.style.minWidth = width;\n                img.style.maxWidth = width;\n              } else {\n                img.style.width = \"100%\";\n              }\n              res(img);\n            }\n            setTimeout(() => {\n              if (img.complete) {\n                setupImage();\n              }\n            });\n            img.addEventListener(\"error\", setupImage);\n            img.addEventListener(\"load\", setupImage);\n          })\n        )\n      );\n    }\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  if (useHtmlLabels) {\n    label.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\n  } else {\n    label.attr(\"transform\", \"translate(0, \" + -bbox.height / 2 + \")\");\n  }\n  if (node.centerLabel) {\n    label.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\n  }\n  label.insert(\"rect\", \":first-child\");\n  return { shapeSvg, bbox, halfPadding, label };\n};\nconst updateNodeBounds = (node, element) => {\n  const bbox = element.node().getBBox();\n  node.width = bbox.width;\n  node.height = bbox.height;\n};\nfunction insertPolygonShape(parent, w, h, points) {\n  return parent.insert(\"polygon\", \":first-child\").attr(\n    \"points\",\n    points.map(function(d) {\n      return d.x + \",\" + d.y;\n    }).join(\" \")\n  ).attr(\"class\", \"label-container\").attr(\"transform\", \"translate(\" + -w / 2 + \",\" + h / 2 + \")\");\n}\nfunction intersectNode(node, point2) {\n  return node.intersect(point2);\n}\nfunction intersectEllipse(node, rx, ry, point2) {\n  var cx = node.x;\n  var cy = node.y;\n  var px = cx - point2.x;\n  var py = cy - point2.y;\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n  var dx = Math.abs(rx * ry * px / det);\n  if (point2.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point2.y < cy) {\n    dy = -dy;\n  }\n  return { x: cx + dx, y: cy + dy };\n}\nfunction intersectCircle(node, rx, point2) {\n  return intersectEllipse(node, rx, rx, point2);\n}\nfunction intersectLine(p1, p2, q1, q2) {\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return;\n  }\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return;\n  }\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return;\n  }\n  offset = Math.abs(denom / 2);\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n  return { x, y };\n}\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\nfunction intersectPolygon(node, polyPoints, point2) {\n  var x1 = node.x;\n  var y1 = node.y;\n  var intersections = [];\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  if (typeof polyPoints.forEach === \"function\") {\n    polyPoints.forEach(function(entry) {\n      minX = Math.min(minX, entry.x);\n      minY = Math.min(minY, entry.y);\n    });\n  } else {\n    minX = Math.min(minX, polyPoints.x);\n    minY = Math.min(minY, polyPoints.y);\n  }\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect2 = intersectLine(\n      node,\n      point2,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect2) {\n      intersections.push(intersect2);\n    }\n  }\n  if (!intersections.length) {\n    return node;\n  }\n  if (intersections.length > 1) {\n    intersections.sort(function(p, q) {\n      var pdx = p.x - point2.x;\n      var pdy = p.y - point2.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n      var qdx = q.x - point2.x;\n      var qdy = q.y - point2.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\nconst intersectRect = (node, point2) => {\n  var x = node.x;\n  var y = node.y;\n  var dx = point2.x - x;\n  var dy = point2.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n  return { x: x + sx, y: y + sy };\n};\nconst intersectRect$1 = intersectRect;\nconst intersect = {\n  node: intersectNode,\n  circle: intersectCircle,\n  ellipse: intersectEllipse,\n  polygon: intersectPolygon,\n  rect: intersectRect$1\n};\nconst note = async (parent, node) => {\n  const useHtmlLabels = node.useHtmlLabels || getConfig().flowchart.htmlLabels;\n  if (!useHtmlLabels) {\n    node.centerLabel = true;\n  }\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    \"node \" + node.classes,\n    true\n  );\n  log.info(\"Classes = \", node.classes);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  rect2.attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", -bbox.width / 2 - halfPadding).attr(\"y\", -bbox.height / 2 - halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nconst note$1 = note;\nconst formatClass = (str) => {\n  if (str) {\n    return \" \" + str;\n  }\n  return \"\";\n};\nconst getClassesFromNode = (node, otherClasses) => {\n  return `${otherClasses ? otherClasses : \"node default\"}${formatClass(node.classes)} ${formatClass(\n    node.class\n  )}`;\n};\nconst question = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const s = w + h;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 }\n  ];\n  log.info(\"Question main (Circle)\");\n  const questionElem = insertPolygonShape(shapeSvg, s, s, points);\n  questionElem.attr(\"style\", node.style);\n  updateNodeBounds(node, questionElem);\n  node.intersect = function(point2) {\n    log.warn(\"Intersect called\");\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst choice = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  const s = 28;\n  const points = [\n    { x: 0, y: s / 2 },\n    { x: s / 2, y: 0 },\n    { x: 0, y: -s / 2 },\n    { x: -s / 2, y: 0 }\n  ];\n  const choice2 = shapeSvg.insert(\"polygon\", \":first-child\").attr(\n    \"points\",\n    points.map(function(d) {\n      return d.x + \",\" + d.y;\n    }).join(\" \")\n  );\n  choice2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 28).attr(\"height\", 28);\n  node.width = 28;\n  node.height = 28;\n  node.intersect = function(point2) {\n    return intersect.circle(node, 14, point2);\n  };\n  return shapeSvg;\n};\nconst hexagon = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const f = 4;\n  const h = bbox.height + node.padding;\n  const m = h / f;\n  const w = bbox.width + 2 * m + node.padding;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const hex = insertPolygonShape(shapeSvg, w, h, points);\n  hex.attr(\"style\", node.style);\n  updateNodeBounds(node, hex);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst rect_left_inv_arrow = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  node.width = w + h;\n  node.height = h;\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst lean_right = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getClassesFromNode(node), true);\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst lean_left = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 2 * h / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - 2 * h / 6, y: -h },\n    { x: -h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst trapezoid = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst inv_trapezoid = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: -2 * h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst rect_right_inv_arrow = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst cylinder = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry + node.padding;\n  const shape = \"M 0,\" + ry + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 a \" + rx + \",\" + ry + \" 0,0,0 \" + -w + \" 0 l 0,\" + h + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 l 0,\" + -h;\n  const el = shapeSvg.attr(\"label-offset-y\", ry).insert(\"path\", \":first-child\").attr(\"style\", node.style).attr(\"d\", shape).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + -(h / 2 + ry) + \")\");\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    const pos = intersect.rect(node, point2);\n    const x = pos.x - node.x;\n    if (rx != 0 && (Math.abs(x) < node.width / 2 || Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry)) {\n      let y = ry * ry * (1 - x * x / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point2.y - node.y > 0) {\n        y = -y;\n      }\n      pos.y += y;\n    }\n    return pos;\n  };\n  return shapeSvg;\n};\nconst rect = async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    \"node \" + node.classes + \" \" + node.class,\n    true\n  );\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const totalWidth = bbox.width + node.padding;\n  const totalHeight = bbox.height + node.padding;\n  rect2.attr(\"class\", \"basic label-container\").attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", -bbox.width / 2 - halfPadding).attr(\"y\", -bbox.height / 2 - halfPadding).attr(\"width\", totalWidth).attr(\"height\", totalHeight);\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect2, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete(\"borders\");\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nconst labelRect = async (parent, node) => {\n  const { shapeSvg } = await labelHelper(parent, node, \"label\", true);\n  log.trace(\"Classes = \", node.class);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const totalWidth = 0;\n  const totalHeight = 0;\n  rect2.attr(\"width\", totalWidth).attr(\"height\", totalHeight);\n  shapeSvg.attr(\"class\", \"label edgeLabel\");\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect2, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete(\"borders\");\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nfunction applyNodePropertyBorders(rect2, borders, totalWidth, totalHeight) {\n  const strokeDashArray = [];\n  const addBorder = (length) => {\n    strokeDashArray.push(length, 0);\n  };\n  const skipBorder = (length) => {\n    strokeDashArray.push(0, length);\n  };\n  if (borders.includes(\"t\")) {\n    log.debug(\"add top border\");\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes(\"r\")) {\n    log.debug(\"add right border\");\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  if (borders.includes(\"b\")) {\n    log.debug(\"add bottom border\");\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes(\"l\")) {\n    log.debug(\"add left border\");\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  rect2.attr(\"stroke-dasharray\", strokeDashArray.join(\" \"));\n}\nconst rectWithTitle = (parent, node) => {\n  let classes;\n  if (!node.classes) {\n    classes = \"node default\";\n  } else {\n    classes = \"node \" + node.classes;\n  }\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId || node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const innerLine = shapeSvg.insert(\"line\");\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"label\");\n  const text2 = node.labelText.flat ? node.labelText.flat() : node.labelText;\n  let title = \"\";\n  if (typeof text2 === \"object\") {\n    title = text2[0];\n  } else {\n    title = text2;\n  }\n  log.info(\"Label text abc79\", title, text2, typeof text2 === \"object\");\n  const text = label.node().appendChild(createLabel$1(title, node.labelStyle, true, true));\n  let bbox = { width: 0, height: 0 };\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  log.info(\"Text 2\", text2);\n  const textRows = text2.slice(1, text2.length);\n  let titleBox = text.getBBox();\n  const descr = label.node().appendChild(\n    createLabel$1(textRows.join ? textRows.join(\"<br/>\") : textRows, node.labelStyle, true, true)\n  );\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = descr.children[0];\n    const dv = select(descr);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const halfPadding = node.padding / 2;\n  select(descr).attr(\n    \"transform\",\n    \"translate( \" + // (titleBox.width - bbox.width) / 2 +\n    (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) + \", \" + (titleBox.height + halfPadding + 5) + \")\"\n  );\n  select(text).attr(\n    \"transform\",\n    \"translate( \" + // (titleBox.width - bbox.width) / 2 +\n    (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) + \", 0)\"\n  );\n  bbox = label.node().getBBox();\n  label.attr(\n    \"transform\",\n    \"translate(\" + -bbox.width / 2 + \", \" + (-bbox.height / 2 - halfPadding + 3) + \")\"\n  );\n  rect2.attr(\"class\", \"outer title-state\").attr(\"x\", -bbox.width / 2 - halfPadding).attr(\"y\", -bbox.height / 2 - halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\n  innerLine.attr(\"class\", \"divider\").attr(\"x1\", -bbox.width / 2 - halfPadding).attr(\"x2\", bbox.width / 2 + halfPadding).attr(\"y1\", -bbox.height / 2 - halfPadding + titleBox.height + halfPadding).attr(\"y2\", -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nconst stadium = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const h = bbox.height + node.padding;\n  const w = bbox.width + h / 4 + node.padding;\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\").attr(\"style\", node.style).attr(\"rx\", h / 2).attr(\"ry\", h / 2).attr(\"x\", -w / 2).attr(\"y\", -h / 2).attr(\"width\", w).attr(\"height\", h);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nconst circle = async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const circle2 = shapeSvg.insert(\"circle\", \":first-child\");\n  circle2.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"r\", bbox.width / 2 + halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\n  log.info(\"Circle main\");\n  updateNodeBounds(node, circle2);\n  node.intersect = function(point2) {\n    log.info(\"Circle intersect\", node, bbox.width / 2 + halfPadding, point2);\n    return intersect.circle(node, bbox.width / 2 + halfPadding, point2);\n  };\n  return shapeSvg;\n};\nconst doublecircle = async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const gap = 5;\n  const circleGroup = shapeSvg.insert(\"g\", \":first-child\");\n  const outerCircle = circleGroup.insert(\"circle\");\n  const innerCircle = circleGroup.insert(\"circle\");\n  circleGroup.attr(\"class\", node.class);\n  outerCircle.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"r\", bbox.width / 2 + halfPadding + gap).attr(\"width\", bbox.width + node.padding + gap * 2).attr(\"height\", bbox.height + node.padding + gap * 2);\n  innerCircle.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"r\", bbox.width / 2 + halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\n  log.info(\"DoubleCircle main\");\n  updateNodeBounds(node, outerCircle);\n  node.intersect = function(point2) {\n    log.info(\"DoubleCircle intersect\", node, bbox.width / 2 + halfPadding + gap, point2);\n    return intersect.circle(node, bbox.width / 2 + halfPadding + gap, point2);\n  };\n  return shapeSvg;\n};\nconst subroutine = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst start = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  const circle2 = shapeSvg.insert(\"circle\", \":first-child\");\n  circle2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 14).attr(\"height\", 14);\n  updateNodeBounds(node, circle2);\n  node.intersect = function(point2) {\n    return intersect.circle(node, 7, point2);\n  };\n  return shapeSvg;\n};\nconst forkJoin = (parent, node, dir) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  let width = 70;\n  let height = 10;\n  if (dir === \"LR\") {\n    width = 10;\n    height = 70;\n  }\n  const shape = shapeSvg.append(\"rect\").attr(\"x\", -1 * width / 2).attr(\"y\", -1 * height / 2).attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"fork-join\");\n  updateNodeBounds(node, shape);\n  node.height = node.height + node.padding / 2;\n  node.width = node.width + node.padding / 2;\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nconst end = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  const innerCircle = shapeSvg.insert(\"circle\", \":first-child\");\n  const circle2 = shapeSvg.insert(\"circle\", \":first-child\");\n  circle2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 14).attr(\"height\", 14);\n  innerCircle.attr(\"class\", \"state-end\").attr(\"r\", 5).attr(\"width\", 10).attr(\"height\", 10);\n  updateNodeBounds(node, circle2);\n  node.intersect = function(point2) {\n    return intersect.circle(node, 7, point2);\n  };\n  return shapeSvg;\n};\nconst class_box = (parent, node) => {\n  const halfPadding = node.padding / 2;\n  const rowPadding = 4;\n  const lineHeight = 8;\n  let classes;\n  if (!node.classes) {\n    classes = \"node default\";\n  } else {\n    classes = \"node \" + node.classes;\n  }\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId || node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const topLine = shapeSvg.insert(\"line\");\n  const bottomLine = shapeSvg.insert(\"line\");\n  let maxWidth = 0;\n  let maxHeight = rowPadding;\n  const labelContainer = shapeSvg.insert(\"g\").attr(\"class\", \"label\");\n  let verticalPos = 0;\n  const hasInterface = node.classData.annotations && node.classData.annotations[0];\n  const interfaceLabelText = node.classData.annotations[0] ? \"«\" + node.classData.annotations[0] + \"»\" : \"\";\n  const interfaceLabel = labelContainer.node().appendChild(createLabel$1(interfaceLabelText, node.labelStyle, true, true));\n  let interfaceBBox = interfaceLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = interfaceLabel.children[0];\n    const dv = select(interfaceLabel);\n    interfaceBBox = div.getBoundingClientRect();\n    dv.attr(\"width\", interfaceBBox.width);\n    dv.attr(\"height\", interfaceBBox.height);\n  }\n  if (node.classData.annotations[0]) {\n    maxHeight += interfaceBBox.height + rowPadding;\n    maxWidth += interfaceBBox.width;\n  }\n  let classTitleString = node.classData.label;\n  if (node.classData.type !== void 0 && node.classData.type !== \"\") {\n    if (getConfig().flowchart.htmlLabels) {\n      classTitleString += \"&lt;\" + node.classData.type + \"&gt;\";\n    } else {\n      classTitleString += \"<\" + node.classData.type + \">\";\n    }\n  }\n  const classTitleLabel = labelContainer.node().appendChild(createLabel$1(classTitleString, node.labelStyle, true, true));\n  select(classTitleLabel).attr(\"class\", \"classTitle\");\n  let classTitleBBox = classTitleLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = classTitleLabel.children[0];\n    const dv = select(classTitleLabel);\n    classTitleBBox = div.getBoundingClientRect();\n    dv.attr(\"width\", classTitleBBox.width);\n    dv.attr(\"height\", classTitleBBox.height);\n  }\n  maxHeight += classTitleBBox.height + rowPadding;\n  if (classTitleBBox.width > maxWidth) {\n    maxWidth = classTitleBBox.width;\n  }\n  const classAttributes = [];\n  node.classData.members.forEach((member) => {\n    const parsedInfo = member.getDisplayDetails();\n    let parsedText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      parsedText = parsedText.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n    const lbl = labelContainer.node().appendChild(\n      createLabel$1(\n        parsedText,\n        parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n        true,\n        true\n      )\n    );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr(\"width\", bbox.width);\n      dv.attr(\"height\", bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classAttributes.push(lbl);\n  });\n  maxHeight += lineHeight;\n  const classMethods = [];\n  node.classData.methods.forEach((member) => {\n    const parsedInfo = member.getDisplayDetails();\n    let displayText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      displayText = displayText.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n    const lbl = labelContainer.node().appendChild(\n      createLabel$1(\n        displayText,\n        parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n        true,\n        true\n      )\n    );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr(\"width\", bbox.width);\n      dv.attr(\"height\", bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classMethods.push(lbl);\n  });\n  maxHeight += lineHeight;\n  if (hasInterface) {\n    let diffX2 = (maxWidth - interfaceBBox.width) / 2;\n    select(interfaceLabel).attr(\n      \"transform\",\n      \"translate( \" + (-1 * maxWidth / 2 + diffX2) + \", \" + -1 * maxHeight / 2 + \")\"\n    );\n    verticalPos = interfaceBBox.height + rowPadding;\n  }\n  let diffX = (maxWidth - classTitleBBox.width) / 2;\n  select(classTitleLabel).attr(\n    \"transform\",\n    \"translate( \" + (-1 * maxWidth / 2 + diffX) + \", \" + (-1 * maxHeight / 2 + verticalPos) + \")\"\n  );\n  verticalPos += classTitleBBox.height + rowPadding;\n  topLine.attr(\"class\", \"divider\").attr(\"x1\", -maxWidth / 2 - halfPadding).attr(\"x2\", maxWidth / 2 + halfPadding).attr(\"y1\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos).attr(\"y2\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n  verticalPos += lineHeight;\n  classAttributes.forEach((lbl) => {\n    select(lbl).attr(\n      \"transform\",\n      \"translate( \" + -maxWidth / 2 + \", \" + (-1 * maxHeight / 2 + verticalPos + lineHeight / 2) + \")\"\n    );\n    const memberBBox = lbl == null ? void 0 : lbl.getBBox();\n    verticalPos += ((memberBBox == null ? void 0 : memberBBox.height) ?? 0) + rowPadding;\n  });\n  verticalPos += lineHeight;\n  bottomLine.attr(\"class\", \"divider\").attr(\"x1\", -maxWidth / 2 - halfPadding).attr(\"x2\", maxWidth / 2 + halfPadding).attr(\"y1\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos).attr(\"y2\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n  verticalPos += lineHeight;\n  classMethods.forEach((lbl) => {\n    select(lbl).attr(\n      \"transform\",\n      \"translate( \" + -maxWidth / 2 + \", \" + (-1 * maxHeight / 2 + verticalPos) + \")\"\n    );\n    const memberBBox = lbl == null ? void 0 : lbl.getBBox();\n    verticalPos += ((memberBBox == null ? void 0 : memberBBox.height) ?? 0) + rowPadding;\n  });\n  rect2.attr(\"style\", node.style).attr(\"class\", \"outer title-state\").attr(\"x\", -maxWidth / 2 - halfPadding).attr(\"y\", -(maxHeight / 2) - halfPadding).attr(\"width\", maxWidth + node.padding).attr(\"height\", maxHeight + node.padding);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nconst shapes = {\n  rhombus: question,\n  question,\n  rect,\n  labelRect,\n  rectWithTitle,\n  choice,\n  circle,\n  doublecircle,\n  stadium,\n  hexagon,\n  rect_left_inv_arrow,\n  lean_right,\n  lean_left,\n  trapezoid,\n  inv_trapezoid,\n  rect_right_inv_arrow,\n  cylinder,\n  start,\n  end,\n  note: note$1,\n  subroutine,\n  fork: forkJoin,\n  join: forkJoin,\n  class_box\n};\nlet nodeElems = {};\nconst insertNode = async (elem, node, dir) => {\n  let newEl;\n  let el;\n  if (node.link) {\n    let target;\n    if (getConfig().securityLevel === \"sandbox\") {\n      target = \"_top\";\n    } else if (node.linkTarget) {\n      target = node.linkTarget || \"_blank\";\n    }\n    newEl = elem.insert(\"svg:a\").attr(\"xlink:href\", node.link).attr(\"target\", target);\n    el = await shapes[node.shape](newEl, node, dir);\n  } else {\n    el = await shapes[node.shape](elem, node, dir);\n    newEl = el;\n  }\n  if (node.tooltip) {\n    el.attr(\"title\", node.tooltip);\n  }\n  if (node.class) {\n    el.attr(\"class\", \"node default \" + node.class);\n  }\n  nodeElems[node.id] = newEl;\n  if (node.haveCallback) {\n    nodeElems[node.id].attr(\"class\", nodeElems[node.id].attr(\"class\") + \" clickable\");\n  }\n  return newEl;\n};\nconst setNodeElem = (elem, node) => {\n  nodeElems[node.id] = elem;\n};\nconst clear$1 = () => {\n  nodeElems = {};\n};\nconst positionNode = (node) => {\n  const el = nodeElems[node.id];\n  log.trace(\n    \"Transforming node\",\n    node.diff,\n    node,\n    \"translate(\" + (node.x - node.width / 2 - 5) + \", \" + node.width / 2 + \")\"\n  );\n  const padding = 8;\n  const diff = node.diff || 0;\n  if (node.clusterNode) {\n    el.attr(\n      \"transform\",\n      \"translate(\" + (node.x + diff - node.width / 2) + \", \" + (node.y - node.height / 2 - padding) + \")\"\n    );\n  } else {\n    el.attr(\"transform\", \"translate(\" + node.x + \", \" + node.y + \")\");\n  }\n  return diff;\n};\nconst markerOffsets = {\n  aggregation: 18,\n  extension: 18,\n  composition: 18,\n  dependency: 6,\n  lollipop: 13.5,\n  arrow_point: 5.3\n};\nfunction calculateDeltaAndAngle(point1, point2) {\n  if (point1 === void 0 || point2 === void 0) {\n    return { angle: 0, deltaX: 0, deltaY: 0 };\n  }\n  point1 = pointTransformer(point1);\n  point2 = pointTransformer(point2);\n  const [x1, y1] = [point1.x, point1.y];\n  const [x2, y2] = [point2.x, point2.y];\n  const deltaX = x2 - x1;\n  const deltaY = y2 - y1;\n  return { angle: Math.atan(deltaY / deltaX), deltaX, deltaY };\n}\nconst pointTransformer = (data) => {\n  if (Array.isArray(data)) {\n    return { x: data[0], y: data[1] };\n  }\n  return data;\n};\nconst getLineFunctionsWithOffset = (edge) => {\n  return {\n    x: function(d, i, data) {\n      let offset = 0;\n      if (i === 0 && Object.hasOwn(markerOffsets, edge.arrowTypeStart)) {\n        const { angle, deltaX } = calculateDeltaAndAngle(data[0], data[1]);\n        offset = markerOffsets[edge.arrowTypeStart] * Math.cos(angle) * (deltaX >= 0 ? 1 : -1);\n      } else if (i === data.length - 1 && Object.hasOwn(markerOffsets, edge.arrowTypeEnd)) {\n        const { angle, deltaX } = calculateDeltaAndAngle(\n          data[data.length - 1],\n          data[data.length - 2]\n        );\n        offset = markerOffsets[edge.arrowTypeEnd] * Math.cos(angle) * (deltaX >= 0 ? 1 : -1);\n      }\n      return pointTransformer(d).x + offset;\n    },\n    y: function(d, i, data) {\n      let offset = 0;\n      if (i === 0 && Object.hasOwn(markerOffsets, edge.arrowTypeStart)) {\n        const { angle, deltaY } = calculateDeltaAndAngle(data[0], data[1]);\n        offset = markerOffsets[edge.arrowTypeStart] * Math.abs(Math.sin(angle)) * (deltaY >= 0 ? 1 : -1);\n      } else if (i === data.length - 1 && Object.hasOwn(markerOffsets, edge.arrowTypeEnd)) {\n        const { angle, deltaY } = calculateDeltaAndAngle(\n          data[data.length - 1],\n          data[data.length - 2]\n        );\n        offset = markerOffsets[edge.arrowTypeEnd] * Math.abs(Math.sin(angle)) * (deltaY >= 0 ? 1 : -1);\n      }\n      return pointTransformer(d).y + offset;\n    }\n  };\n};\nconst addEdgeMarkers = (svgPath, edge, url, id, diagramType) => {\n  if (edge.arrowTypeStart) {\n    addEdgeMarker(svgPath, \"start\", edge.arrowTypeStart, url, id, diagramType);\n  }\n  if (edge.arrowTypeEnd) {\n    addEdgeMarker(svgPath, \"end\", edge.arrowTypeEnd, url, id, diagramType);\n  }\n};\nconst arrowTypesMap = {\n  arrow_cross: \"cross\",\n  arrow_point: \"point\",\n  arrow_barb: \"barb\",\n  arrow_circle: \"circle\",\n  aggregation: \"aggregation\",\n  extension: \"extension\",\n  composition: \"composition\",\n  dependency: \"dependency\",\n  lollipop: \"lollipop\"\n};\nconst addEdgeMarker = (svgPath, position, arrowType, url, id, diagramType) => {\n  const endMarkerType = arrowTypesMap[arrowType];\n  if (!endMarkerType) {\n    log.warn(`Unknown arrow type: ${arrowType}`);\n    return;\n  }\n  const suffix = position === \"start\" ? \"Start\" : \"End\";\n  svgPath.attr(`marker-${position}`, `url(${url}#${id}_${diagramType}-${endMarkerType}${suffix})`);\n};\nlet edgeLabels = {};\nlet terminalLabels = {};\nconst clear = () => {\n  edgeLabels = {};\n  terminalLabels = {};\n};\nconst insertEdgeLabel = (elem, edge) => {\n  const useHtmlLabels = evaluate(getConfig().flowchart.htmlLabels);\n  const labelElement = edge.labelType === \"markdown\" ? createText(elem, edge.label, {\n    style: edge.labelStyle,\n    useHtmlLabels,\n    addSvgBackground: true\n  }) : createLabel$1(edge.label, edge.labelStyle);\n  log.info(\"abc82\", edge, edge.labelType);\n  const edgeLabel = elem.insert(\"g\").attr(\"class\", \"edgeLabel\");\n  const label = edgeLabel.insert(\"g\").attr(\"class\", \"label\");\n  label.node().appendChild(labelElement);\n  let bbox = labelElement.getBBox();\n  if (useHtmlLabels) {\n    const div = labelElement.children[0];\n    const dv = select(labelElement);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  label.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\n  edgeLabels[edge.id] = edgeLabel;\n  edge.width = bbox.width;\n  edge.height = bbox.height;\n  let fo;\n  if (edge.startLabelLeft) {\n    const startLabelElement = createLabel$1(edge.startLabelLeft, edge.labelStyle);\n    const startEdgeLabelLeft = elem.insert(\"g\").attr(\"class\", \"edgeTerminals\");\n    const inner = startEdgeLabelLeft.insert(\"g\").attr(\"class\", \"inner\");\n    fo = inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr(\"transform\", \"translate(\" + -slBox.width / 2 + \", \" + -slBox.height / 2 + \")\");\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startLeft = startEdgeLabelLeft;\n    setTerminalWidth(fo, edge.startLabelLeft);\n  }\n  if (edge.startLabelRight) {\n    const startLabelElement = createLabel$1(edge.startLabelRight, edge.labelStyle);\n    const startEdgeLabelRight = elem.insert(\"g\").attr(\"class\", \"edgeTerminals\");\n    const inner = startEdgeLabelRight.insert(\"g\").attr(\"class\", \"inner\");\n    fo = startEdgeLabelRight.node().appendChild(startLabelElement);\n    inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr(\"transform\", \"translate(\" + -slBox.width / 2 + \", \" + -slBox.height / 2 + \")\");\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startRight = startEdgeLabelRight;\n    setTerminalWidth(fo, edge.startLabelRight);\n  }\n  if (edge.endLabelLeft) {\n    const endLabelElement = createLabel$1(edge.endLabelLeft, edge.labelStyle);\n    const endEdgeLabelLeft = elem.insert(\"g\").attr(\"class\", \"edgeTerminals\");\n    const inner = endEdgeLabelLeft.insert(\"g\").attr(\"class\", \"inner\");\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr(\"transform\", \"translate(\" + -slBox.width / 2 + \", \" + -slBox.height / 2 + \")\");\n    endEdgeLabelLeft.node().appendChild(endLabelElement);\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endLeft = endEdgeLabelLeft;\n    setTerminalWidth(fo, edge.endLabelLeft);\n  }\n  if (edge.endLabelRight) {\n    const endLabelElement = createLabel$1(edge.endLabelRight, edge.labelStyle);\n    const endEdgeLabelRight = elem.insert(\"g\").attr(\"class\", \"edgeTerminals\");\n    const inner = endEdgeLabelRight.insert(\"g\").attr(\"class\", \"inner\");\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr(\"transform\", \"translate(\" + -slBox.width / 2 + \", \" + -slBox.height / 2 + \")\");\n    endEdgeLabelRight.node().appendChild(endLabelElement);\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endRight = endEdgeLabelRight;\n    setTerminalWidth(fo, edge.endLabelRight);\n  }\n  return labelElement;\n};\nfunction setTerminalWidth(fo, value) {\n  if (getConfig().flowchart.htmlLabels && fo) {\n    fo.style.width = value.length * 9 + \"px\";\n    fo.style.height = \"12px\";\n  }\n}\nconst positionEdgeLabel = (edge, paths) => {\n  log.info(\"Moving label abc78 \", edge.id, edge.label, edgeLabels[edge.id]);\n  let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  if (edge.label) {\n    const el = edgeLabels[edge.id];\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = utils.calcLabelPosition(path);\n      log.info(\n        \"Moving label \" + edge.label + \" from (\",\n        x,\n        \",\",\n        y,\n        \") to (\",\n        pos.x,\n        \",\",\n        pos.y,\n        \") abc78\"\n      );\n      if (paths.updatedPath) {\n        x = pos.x;\n        y = pos.y;\n      }\n    }\n    el.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n  }\n  if (edge.startLabelLeft) {\n    const el = terminalLabels[edge.id].startLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeStart ? 10 : 0, \"start_left\", path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n  }\n  if (edge.startLabelRight) {\n    const el = terminalLabels[edge.id].startRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = utils.calcTerminalLabelPosition(\n        edge.arrowTypeStart ? 10 : 0,\n        \"start_right\",\n        path\n      );\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n  }\n  if (edge.endLabelLeft) {\n    const el = terminalLabels[edge.id].endLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, \"end_left\", path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n  }\n  if (edge.endLabelRight) {\n    const el = terminalLabels[edge.id].endRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, \"end_right\", path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n  }\n};\nconst outsideNode = (node, point2) => {\n  const x = node.x;\n  const y = node.y;\n  const dx = Math.abs(point2.x - x);\n  const dy = Math.abs(point2.y - y);\n  const w = node.width / 2;\n  const h = node.height / 2;\n  if (dx >= w || dy >= h) {\n    return true;\n  }\n  return false;\n};\nconst intersection = (node, outsidePoint, insidePoint) => {\n  log.warn(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(outsidePoint)}\n  insidePoint : ${JSON.stringify(insidePoint)}\n  node        : x:${node.x} y:${node.y} w:${node.width} h:${node.height}`);\n  const x = node.x;\n  const y = node.y;\n  const dx = Math.abs(x - insidePoint.x);\n  const w = node.width / 2;\n  let r = insidePoint.x < outsidePoint.x ? w - dx : w + dx;\n  const h = node.height / 2;\n  const Q = Math.abs(outsidePoint.y - insidePoint.y);\n  const R = Math.abs(outsidePoint.x - insidePoint.x);\n  if (Math.abs(y - outsidePoint.y) * w > Math.abs(x - outsidePoint.x) * h) {\n    let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    r = R * q / Q;\n    const res = {\n      x: insidePoint.x < outsidePoint.x ? insidePoint.x + r : insidePoint.x - R + r,\n      y: insidePoint.y < outsidePoint.y ? insidePoint.y + Q - q : insidePoint.y - Q + q\n    };\n    if (r === 0) {\n      res.x = outsidePoint.x;\n      res.y = outsidePoint.y;\n    }\n    if (R === 0) {\n      res.x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      res.y = outsidePoint.y;\n    }\n    log.warn(`abc89 topp/bott calc, Q ${Q}, q ${q}, R ${R}, r ${r}`, res);\n    return res;\n  } else {\n    if (insidePoint.x < outsidePoint.x) {\n      r = outsidePoint.x - w - x;\n    } else {\n      r = x - w - outsidePoint.x;\n    }\n    let q = Q * r / R;\n    let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x - R + r;\n    let _y = insidePoint.y < outsidePoint.y ? insidePoint.y + q : insidePoint.y - q;\n    log.warn(`sides calc abc89, Q ${Q}, q ${q}, R ${R}, r ${r}`, { _x, _y });\n    if (r === 0) {\n      _x = outsidePoint.x;\n      _y = outsidePoint.y;\n    }\n    if (R === 0) {\n      _x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      _y = outsidePoint.y;\n    }\n    return { x: _x, y: _y };\n  }\n};\nconst cutPathAtIntersect = (_points, boundryNode) => {\n  log.warn(\"abc88 cutPathAtIntersect\", _points, boundryNode);\n  let points = [];\n  let lastPointOutside = _points[0];\n  let isInside = false;\n  _points.forEach((point2) => {\n    log.info(\"abc88 checking point\", point2, boundryNode);\n    if (!outsideNode(boundryNode, point2) && !isInside) {\n      const inter = intersection(boundryNode, lastPointOutside, point2);\n      log.warn(\"abc88 inside\", point2, lastPointOutside, inter);\n      log.warn(\"abc88 intersection\", inter);\n      let pointPresent = false;\n      points.forEach((p) => {\n        pointPresent = pointPresent || p.x === inter.x && p.y === inter.y;\n      });\n      if (!points.some((e) => e.x === inter.x && e.y === inter.y)) {\n        points.push(inter);\n      } else {\n        log.warn(\"abc88 no intersect\", inter, points);\n      }\n      isInside = true;\n    } else {\n      log.warn(\"abc88 outside\", point2, lastPointOutside);\n      lastPointOutside = point2;\n      if (!isInside) {\n        points.push(point2);\n      }\n    }\n  });\n  log.warn(\"abc88 returning points\", points);\n  return points;\n};\nconst insertEdge = function(elem, e, edge, clusterDb, diagramType, graph, id) {\n  let points = edge.points;\n  let pointsHasChanged = false;\n  const tail = graph.node(e.v);\n  var head = graph.node(e.w);\n  log.info(\"abc88 InsertEdge: \", edge);\n  if (head.intersect && tail.intersect) {\n    points = points.slice(1, edge.points.length - 1);\n    points.unshift(tail.intersect(points[0]));\n    log.info(\n      \"Last point\",\n      points[points.length - 1],\n      head,\n      head.intersect(points[points.length - 1])\n    );\n    points.push(head.intersect(points[points.length - 1]));\n  }\n  if (edge.toCluster) {\n    log.info(\"to cluster abc88\", clusterDb[edge.toCluster]);\n    points = cutPathAtIntersect(edge.points, clusterDb[edge.toCluster].node);\n    pointsHasChanged = true;\n  }\n  if (edge.fromCluster) {\n    log.info(\"from cluster abc88\", clusterDb[edge.fromCluster]);\n    points = cutPathAtIntersect(points.reverse(), clusterDb[edge.fromCluster].node).reverse();\n    pointsHasChanged = true;\n  }\n  const lineData = points.filter((p) => !Number.isNaN(p.y));\n  let curve = curveBasis;\n  if (edge.curve && (diagramType === \"graph\" || diagramType === \"flowchart\")) {\n    curve = edge.curve;\n  }\n  const { x, y } = getLineFunctionsWithOffset(edge);\n  const lineFunction = line().x(x).y(y).curve(curve);\n  let strokeClasses;\n  switch (edge.thickness) {\n    case \"normal\":\n      strokeClasses = \"edge-thickness-normal\";\n      break;\n    case \"thick\":\n      strokeClasses = \"edge-thickness-thick\";\n      break;\n    case \"invisible\":\n      strokeClasses = \"edge-thickness-thick\";\n      break;\n    default:\n      strokeClasses = \"\";\n  }\n  switch (edge.pattern) {\n    case \"solid\":\n      strokeClasses += \" edge-pattern-solid\";\n      break;\n    case \"dotted\":\n      strokeClasses += \" edge-pattern-dotted\";\n      break;\n    case \"dashed\":\n      strokeClasses += \" edge-pattern-dashed\";\n      break;\n  }\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", edge.id).attr(\"class\", \" \" + strokeClasses + (edge.classes ? \" \" + edge.classes : \"\")).attr(\"style\", edge.style);\n  let url = \"\";\n  if (getConfig().flowchart.arrowMarkerAbsolute || getConfig().state.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  log.info(\"arrowTypeStart\", edge.arrowTypeStart);\n  log.info(\"arrowTypeEnd\", edge.arrowTypeEnd);\n  addEdgeMarkers(svgPath, edge, url, id, diagramType);\n  let paths = {};\n  if (pointsHasChanged) {\n    paths.updatedPath = points;\n  }\n  paths.originalPath = edge.points;\n  return paths;\n};\nexport {\n  insertMarkers$1 as a,\n  clear$1 as b,\n  createLabel$1 as c,\n  clear as d,\n  insertNode as e,\n  insertEdgeLabel as f,\n  insertEdge as g,\n  positionEdgeLabel as h,\n  intersectRect$1 as i,\n  getLineFunctionsWithOffset as j,\n  addEdgeMarkers as k,\n  labelHelper as l,\n  positionNode as p,\n  setNodeElem as s,\n  updateNodeBounds as u\n};\n"],"names":["insertMarkers","elem","markerArray","type","id","forEach","markerName","markers","extension","l","append","attr","composition","aggregation","dependency","lollipop","point","style","circle$1","cross","barb","circle","insertMarkers$1","applyStyle","dom","styleFn","addHtmlLabel","node","fo","document","createElementNS","div","label","labelClass","isNode","html","labelStyle","createLabel","_vertexText","isTitle","vertexText","flowchart","htmlLabels","replace","s","vertexNode","svgLabel","setAttribute","rows","split","Array","isArray","row","tspan","setAttributeNS","textContent","trim","appendChild","createLabel$1","labelHelper","async","parent","_classes","classes","useHtmlLabels","shapeSvg","insert","domId","labelText","textNode","text","labelType","width","wrappingWidth","bbox","getBBox","halfPadding","padding","children","dv","images","getElementsByTagName","noImgText","Promise","all","map","img","res","setupImage","display","flexDirection","bodyFontSize","fontSize","window","getComputedStyle","body","enlargingFactor","parseInt","minWidth","maxWidth","setTimeout","complete","addEventListener","getBoundingClientRect","height","centerLabel","updateNodeBounds","element","insertPolygonShape","w","h","points","d","x","y","join","intersectNode","point2","intersect","intersectEllipse","rx","ry","cx","cy","px","py","det","Math","sqrt","dx","abs","dy","intersectCircle","intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","sameSign","intersectPolygon","polyPoints","x1","y1","intersections","minX","Number","POSITIVE_INFINITY","minY","entry","min","left","top","i","length","intersect2","push","sort","p","q","pdx","pdy","distp","qdx","qdy","distq","intersectRect","sx","sy","intersectRect$1","ellipse","polygon","rect","note","rect2","note$1","formatClass","str","getClassesFromNode","otherClasses","class","question","questionElem","choice","choice2","hexagon","f","m","hex","rect_left_inv_arrow","el","lean_right","lean_left","trapezoid","inv_trapezoid","rect_right_inv_arrow","cylinder","shape","pos","totalWidth","totalHeight","props","propKeys","Set","Object","keys","borders","applyNodePropertyBorders","delete","propKey","labelRect","strokeDashArray","addBorder","skipBorder","includes","rectWithTitle","innerLine","text2","flat","title","textRows","slice","titleBox","descr","stadium","circle2","doublecircle","gap","circleGroup","outerCircle","innerCircle","subroutine","start","forkJoin","dir","end","class_box","rowPadding","lineHeight","topLine","bottomLine","maxHeight","labelContainer","verticalPos","hasInterface","classData","annotations","interfaceLabelText","interfaceLabel","interfaceBBox","classTitleString","classTitleLabel","classTitleBBox","classAttributes","members","member","parsedInfo","getDisplayDetails","parsedText","displayText","lbl","cssStyle","classMethods","methods","diffX2","diffX","memberBBox","shapes","rhombus","fork","nodeElems","insertNode","newEl","link","target","securityLevel","linkTarget","tooltip","haveCallback","setNodeElem","clear$1","positionNode","diff","clusterNode","markerOffsets","arrow_point","calculateDeltaAndAngle","point1","angle","deltaX","deltaY","pointTransformer","x2","y2","atan","data","getLineFunctionsWithOffset","edge","hasOwn","arrowTypeStart","cos","arrowTypeEnd","sin","addEdgeMarkers","svgPath","url","diagramType","addEdgeMarker","arrowTypesMap","arrow_cross","arrow_barb","arrow_circle","position","arrowType","endMarkerType","suffix","edgeLabels","terminalLabels","clear","insertEdgeLabel","labelElement","addSvgBackground","edgeLabel","startLabelLeft","startLabelElement","startEdgeLabelLeft","inner","slBox","startLeft","setTerminalWidth","startLabelRight","startEdgeLabelRight","startRight","endLabelLeft","endLabelElement","endEdgeLabelLeft","endLeft","endLabelRight","endEdgeLabelRight","endRight","value","positionEdgeLabel","paths","path","updatedPath","originalPath","u","outsideNode","intersection","outsidePoint","insidePoint","JSON","stringify","r","Q","R","_x","_y","cutPathAtIntersect","_points","boundryNode","lastPointOutside","isInside","inter","pointPresent","some","e","insertEdge","clusterDb","graph","pointsHasChanged","tail","v","head","unshift","toCluster","fromCluster","reverse","lineData","filter","isNaN","curve","lineFunction","strokeClasses","thickness","pattern","arrowMarkerAbsolute","state","location","protocol","host","pathname","search"],"sourceRoot":""}